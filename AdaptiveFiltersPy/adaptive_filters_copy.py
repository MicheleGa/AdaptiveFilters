"""
Adaptive Filters Example
========================

In this example, we will run adaptive filters for system identification.
"""
from __future__ import division, print_function
from re import L
import time

import numpy as np 
from scipy.signal import fftconvolve
import math
import matplotlib.pyplot as plt
import pyroomacoustics as pra

# parameters
length = 16  # the unknown filter length
n_samples = 256  # the number of samples to run
SNR = 15  # signal to noise ratio

# the unknown filter (unit norm)
w = [1.0140463172395615, 0.7754528220698231, 0.19257470401522017, -1.495388137327596, 0.5735107936548605, 0.9588716102634469, 1.4735018892486091, 0.3655323875730493, 0.5364848029792985, -0.47931076923591875, -0.8914090372857795, -0.9419009245944294, -1.0716600741522855, -1.7935318001387688, 0.5803132007673684, 0.0]

w /= np.linalg.norm(w)

# create a known driving signal
x = [1.206700664651145, -0.6047899369708385, -0.18461087200259008, 0.051255184724311134, 1.8472570868277163, 1.517951202358241, -0.7856100529089669, -0.08374346641100056, -0.3965766242670389, -0.8298568066413623, -0.3335703799760932, -0.006319438409249379, 2.798812445690176, 0.8071937677757466, 1.3592016800443563, 0.6358836406167824, -0.3433056254810782, -0.32699202232589847, 0.17913787033568337, -0.3486569222893657, -2.0385774931871126, -0.3745900002540252, -0.346976497840456, -1.3126044383724742, 0.16710753490840613, -0.04422474450248334, -1.0596548774813244, 0.37455709854568564, 0.04265199124650793, -1.5199553519622087, -0.9137498122304416, 1.0279698359057001, -1.1859851919782143, 1.8131457948969938, 1.562150210465841, -1.5162690606562832, 0.9685621988104479, 0.5891832282211973, -0.42221681212624007, -2.1090179595657097, -0.8532239301626212, -0.6511141111765404, 0.571819653707873, 0.14542328585899572, 0.9440463007059763, -1.3890194530067297, 0.9546311273337932, -0.11674382866827512, 0.8218642127618524, -0.178665982683482, -1.1742117576651685, -0.5144914570572781, 0.8998885811051562, -0.3080976851133188, -1.0044037213013048, -1.1041376864380557, 1.619825441922085, -0.18813479006687944, -0.25659147930632514, 1.6864069848547012, -1.2203267609979442, -0.36740441252021455, 1.4462609634008725, -1.1259485551980306, -0.8148379082722587, -0.5008139620192986, 0.2778655225071958, -1.9475470260797056, -0.08536680168582869, -1.2045198007087223, -0.6150072456252536, 0.41544384543877344, 0.5721125544164752, 0.5969699390475057, -0.41615174369798186, -0.6758564028907603, 0.11729551964519855, 0.5910124640767839, 1.723103199318868, 0.5716934831535929, -2.0195265924724786, 1.9505037738324158, -0.035770060412594486, -2.0726109597948197, -0.8443241376794057, -1.1247945199626157, -0.8143533445029285, 0.912552275638422, 0.7549055427281539, 0.41707496434488517, 0.07084709908970949, -1.692365676514876, -0.19537168966633403, 0.2879842414634963, 0.20000319159229232, 1.006512230606432, 0.5635477278533647, -0.24567771923186846, 0.8444179733046158, 0.4062507161678689, 1.3948511555768697, 0.49647258422725243, -1.0759218262120827, -0.0009212995836451672, -2.439732496552396, 0.1946939148369527, -0.02731310308589593, -0.4805264568289508, -0.16835301319222176, 0.5674074130083817, -1.9735401201371543, -1.57922844029808, -0.08306479801732736, -0.12375266668900005, -0.21149848217626427, 1.3333517451423855, -0.8753782721823976, 0.1706250838070516, 1.0046275787686874, 0.6301740441261569, -1.0085953779252825, -0.09802803282930106, 1.120426711014903, -1.0130439862334155, -2.006455740342494, 0.1496056261074438, -0.2303741607967362, 1.7288229523494356, -0.10400485735031173, -0.5914285922762135, -0.3549000820059803, -0.8382033920842413, -0.16726277230742762, 0.3916801919601595, 0.9746069392064182, -1.3589954668236828, 1.478775693722604, 0.31588778468012585, -0.001843686632970957, -0.16796264885269532, 0.022998204272541532, 0.7091898260056275, 0.11459464098621323, -0.42751621730405864, -0.2976031021659431, 0.17572317586206695, -0.1603087169320438, -0.7197885888526322, -1.55878799489168, 0.6957583898040731, 1.3272989813458047, 1.466660294410316, 0.9218815645865945, -0.4478380269519566, -1.1599370970833924, 0.29730824194149186, -0.29113725203181806, 1.2404738955369055, 0.09704749186356514, -0.7344867986154502, -0.43214810725566544, -1.3079378659948189, -1.1843370165528886, -0.9088617287924298, -0.750932088520385, 1.9521732118988513, -1.8202907781517603, 1.3314871949567515, -2.0484512824519463, 0.45081365412671665, -0.1754077657042697, -0.9916365036843018, 1.2487800444774462, -0.7483678397936496, 0.15633322723228218, -1.0893918542628764, 1.1431653956398924, 1.6845329240708742, -1.7117468768856485, -0.19153011172741044, 1.5169125757899726, -0.47887041933862046, 0.6602517479837564, 1.257360918838004, 0.5684192923663717, -2.0198371971212064, -2.551603912742273, 0.03390556662106247, -0.14829131014513341, -0.6747187185921968, 0.7872687673795297, 1.420606582148373, 0.29042350798806205, -0.2258963710034453, -0.06104382191654618, -0.8318225837464247, 0.055482284238076454, 0.82193712650061, -0.44507471851793445, -1.4261057526570886, -0.278245142505538, -0.6370256021914836, -0.06798485260635508, 0.12022166232139621, 0.4573348244777167, 0.28088533029408, 1.0699323639063945, 1.5280587020553809, 0.4522493494196621, 1.9599761516450653, -1.3381951078373973, 0.7922041040580221, -0.3711671380403258, 0.1029981880219911, 1.3106031263363656, -0.9243145238387189, -0.46427642989764084, -0.10456913784046448, 0.5404189922829633, 1.5639125252704809, 0.9827022919555852, -0.7812756649402698, -0.7033498285640993, 1.0723275290921541, -1.0638496427116293, -1.1669153764010955, 0.6431261217231143, 1.0928479017061594, -0.3180730052369211, -1.190066180969939, 0.7168257507309088, -1.601011457734964, -0.8354186008393341, -0.2918585881477678, -0.8589916474702463, -0.8771643904323823, 1.828176433289387, 0.17409310279312382, 0.308304966538093, 1.4597642306145673, 0.12570516018459066, 1.0342297624298356, 0.12444990789603579, -0.807412397565598, -0.5314671959501144, 0.17041116487961055, -0.20288594552973283, -0.7679626953239668, 0.9284505317515689, 1.0748281613311028, 1.3736650061271745, 0.9762920248020087, 0.8221613781997735, -0.020065073791966176, -1.9452116408353053, 0.061390524161148194]

# convolve with the unknown filter
#d_clean = fftconvolve(x, w)[:n_samples]

# add some noise to the reference signal
# d = d_clean + np.random.randn(n_samples) * 10 ** (-SNR / 20.0)

d = [0.14060149009793552, 0.13412398282718385, -0.21504194599678444, -0.7960083351000014, 1.0395913322026327, 1.2152684095175763, 0.09840969786020792, -1.1921420268543184, -0.4131688167286305, 0.4924803173209944, 0.5902954340830338, 0.734328839664208, 1.0450822730039033, 0.018942472408826683, 0.1698368965123459, -1.6310709716546052, -0.6370842766627616, -1.2631240489962146, 1.0955104208443183, 1.8237041583097784, 0.8123527384525133, 0.03784861080749245, -0.27606049832921686, -0.6061031294091388, -1.9764163582384426, -2.8892548866991414, -0.9307601638704968, -1.4554918992922588, -0.7526107930594119, 0.12018596463972815, -0.7744806785500034, 0.20049058806551953, 1.4251208384952239, 1.8546710491298233, -0.05736011473192542, 0.572615303179923, -0.333315889016854, -0.6146378391364005, 1.2363751912600582, 0.6194810624399665, -0.3958129810154675, 0.24435617275934257, 1.791255403046953, -0.13819011604107612, -0.8938693393127585, -1.576781842056261, -2.0157899268648904, -0.9108364613608455, 1.764462521640374, -0.22118903934008652, 0.8709629851515988, 0.08733846472478682, 1.9987003162503856, 0.5458469633991355, 0.08959540057334302, -1.4048452237486966, -0.18774230353892538, 0.025308417906446792, 0.6191618768792196, -1.4074691907886971, -0.1435084902912212, -0.20126778146257404, 0.12276699449624873, 1.283071476393624, 0.38803173857880296, -0.9537544580120558, 0.6574569763420507, 0.4204870364697618, -0.5348191719845214, -2.334366888163201, 0.16342657139742733, -1.1561884427289335, -0.25825197507323977, 0.027265943895623534, -0.635534023346108, -1.4372348352959101, 0.616452500607719, 1.2048952537043438, 1.5286544407901461, 1.166282711583654, 0.34446173622217346, -0.5473398412820055, 0.8894176539941547, 0.5276641624735697, -1.0657093246326643, -0.304526658141124, -0.055627209685911894, 0.8146592067890618, -0.6526199632297374, -0.8188206185246866, -1.4908365066254607, -2.412195511671885, -0.5366798225752468, 1.4015475312720655, 0.7310466952952426, 2.316338296895333, 1.431585464718137, -0.16965848895215038, -0.3104505573134645, -0.27427197672868475, 0.5152748286004527, 0.9217655239031941, 0.7434207773266904, 0.33851374634771125, 0.3528081905845843, -0.11052063581022745, -0.07472888667362376, 0.26312723595977183, -1.6699037211810785, -0.7308136171704935, -1.5873171971531517, -2.030214862059738, -1.249378624668673, 0.36266033639597356, 0.9367149593190268, 0.8140767205139232, -0.6054955532426757, 0.46541799577072285, -1.2954577651825865, 1.0810836141094708, 0.5416416544146958, 0.5384643131010705, 0.6514687482923514, 2.6184728934283554, -0.198452212568456, -1.1199930935465672, 0.2665903929492066, 0.9625023608083522, -0.7325177156796312, -0.5055092850620785, -1.7605250309193634, -0.8280451435793124, -0.29645937486594465, 1.5107761541972586, 0.8413549736707012, -0.2753470241206041, 0.4149111842231447, -0.03197386039645683, 0.2039790413918602, -0.6930039753812033, -0.37916181208806865, 1.235711166152027, 1.4672626973498386, 0.18870894601123855, -0.18855865388308243, 0.07328197682599247, -0.27105458873842325, -0.25566389340177903, -0.16048102844312465, -1.016473649387643, 0.46277086332138606, 1.2304196391592324, -0.12076656273616983, -0.5905573166034217, -1.261858891496206, 0.13778284493104645, 1.3188241753447127, 2.2140800696462457, 0.8938155464927459, 0.3865999552208238, -0.9419918685732003, -0.7155161954690038, -1.708307142072694, -1.143073325776343, -0.4571362870510677, 0.7095477775706684, -0.09157605852541281, -0.6676248674197812, -2.428209652491535, 0.3216442172399842, -1.0025858389992601, 1.3869594345081158, 0.5757670812550888, 1.5384588864882, 0.5983864192155892, 0.012523371922469828, 0.4562453962665586, 0.5705906296535023, 0.12245387564048586, 0.2609513560193839, -0.8510808950852035, 2.270204360146363, 0.3458726148492622, 0.21303090116639484, 0.7575347375440293, -0.8714503265634697, -1.102921203669331, -1.0578235163666845, 1.315930122777091, 0.4146330905344696, -0.6396419192049425, 0.06442220765460457, -1.0515572409413136, -1.9445832559167378, -1.3998227351742016, -0.2854870025592145, 0.9336612091479057, 2.010164071480586, 2.5990708273630383, 0.4002356223814775, -1.8426931553853527, -0.750961320215485, 0.3088378815223606, -1.0399698455519495, -0.3284336937889232, -0.30102649920961766, 0.42990793969535246, -0.18064900658161717, 0.8761432212128251, 0.3357050195679681, -0.037874090630494, 1.3263427164139088, 0.8359365488065019, 1.8544953802778275, 1.0115790542032181, 0.7993900818582956, -1.2424505536940782, -1.5761625182300594, -0.7405369216968701, -0.34995195176362265, 0.07338686591889251, -0.7191483785315589, -1.7090851071596547, 0.48966753095887894, -0.0026149328069154654, 0.5908893867725852, -0.23220763731352265, 0.3263170779054592, 1.1706937452277568, -1.184368412118087, -1.63432783190459, -1.1911227399383268, -0.4954655316139607, -0.6517736132570984, 1.0886508344667227, -0.15145233463894187, -0.34000112514988284, 0.22297986724133126, 0.15084683121054018, -1.4259487721588444, -0.3070619850996644, 1.2327119783844418, 1.0240963524117757, 0.6702915715084397, 1.373852654914443, 0.9116731241745077, 0.659118335278751, 0.4314624932311544, -0.4387388139114391, -0.9789278744876235, 0.09591250333018464, -0.6815223595976747, -0.9757301143304465, -0.06480985474890526, -0.2022992259070817, 0.9230205297654422]

# create a bunch adaptive filters
#filter=pra.adaptive.RLS(length, lmbd=1.0, delta=2.0)
#filter=pra.adaptive.NLMS(length, mu=0.5)
#filter=pra.adaptive.BlockLMS(length, mu=1.0 / 15.0 / 2.0, L=8, nlms=True)
filter=pra.adaptive.BlockRLS(length, lmbd=1.0, delta=2.0, L=8)
error=np.zeros(n_samples)

for i in range(n_samples):
    filter.update(x[i], d[i])
    error[i] = np.linalg.norm(filter.w - w)

""" for i in range(n_samples):
    if i % 16 == 0:
        print(error[i])  """
print(error[-1])
print(filter.w)
""" plt.plot(w)
for algo in adfilt.values():
    plt.plot(algo["filter"].w)
plt.title("Original and reconstructed filters")
plt.legend(["groundtruth"] + list(adfilt))

plt.figure()
for algo in adfilt.values():
    plt.semilogy(algo["error"])
plt.legend(adfilt)
plt.title("Convergence to unknown filter")
plt.show() """
