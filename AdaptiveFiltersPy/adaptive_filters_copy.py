"""
Adaptive Filters Example
========================

In this example, we will run adaptive filters for system identification.
"""
from __future__ import division, print_function

import numpy as np 
from scipy.signal import fftconvolve
import math
import matplotlib.pyplot as plt
import pyroomacoustics as pra


# parameters
length = 15  # the unknown filter length
n_samples = 256  # the number of samples to run
SNR = 15  # signal to noise ratio

# the unknown filter (unit norm)
w = [-0.6485386777578028, 0.5420029059938505, 0.5835109060552006, 0.8237812153850512, 0.7452050708099964, -0.6628027605101249, -0.22386022630782015, 0.11851850634698993, 1.4933814821323397, 2.493269968572927, -0.8895442808464493, 0.9148589961075394, -1.4017193635372396, 0.10154522834498877, 0.9405369159727355]

w /= np.linalg.norm(w)

w_norm = [-0.1635366385079776, 0.1366723934094974, 0.14713912274118598, 0.20772610092562319, 0.18791220394241165, -0.16713349436980413, -0.056448983170264866, 0.02988583224671051, 0.37657366626511257, 0.6287072822903842, -0.22430902964271884, 0.2306924321760853, -0.35345998736258716, 0.025605821008976317, 0.23716742101275665]

# create a known driving signal
x = [-1.223169013378921, -1.1274343401299258, 0.10038165265004717, 0.6205698655235725, -1.635998293288048, 0.4871031637848082, -0.5235132305744333, -1.3967587478844423, 1.2687383400139363, 0.5367705117233029, 0.6026435370490262, -1.1712908745455684, -0.10894494694320292, 2.8654347356465886, 1.3752696017386037, -0.0899222895707849, 0.02641860468092442, 0.7525601686691885, -1.2963342671488725, -0.9542774427716807, -1.737286699239503, 0.278768869702722, -0.62774213514938, 0.3642276423827912, 0.5715938543297, -0.6870168775636303, 0.3782391002644795, -1.4204263232242782, -1.264536821578533, -0.19128486299899305, -1.0621157644178512, 0.9224001792311585, 0.5032477098547092, -0.6400534837407024, 0.14604930164926722, -0.21131166759911282, -1.8210499814531156, -0.31145542811635085, -1.7579004807063663, 0.12266805601485896, -0.22359750635835096, 0.01366774129580709, -1.2656198737485043, -0.7425687792017092, 0.06572956879957229, -0.4937890562482721, -1.5108701532198678, -0.24667523243532394, 2.5471533777689372, -0.10486831715777108, 0.23541291250711258, 0.31204968016903445, -0.5524456995838334, -0.12813539881060892, 0.6479268726029923, 0.007605644610249362, 0.13374729555243667, -0.009967317502537279, -2.3185922893216686, 0.3532768283764264, -0.1352847329071362, 1.0563294685958733, 2.7692016124415084, 1.3640465712927603, 1.0062727163741367, -0.30414721874893413, 0.4415242824124808, -1.3926032639961057, -0.08735800376738188, 0.2507776869238926, 1.448360426136413, 1.9773466313977972, 1.8462741365778659, -0.5424203879218075, 1.0706815090836461, 1.1756074028628545, -0.9236385611566139, -1.536461137645015, -1.7900505343849689, -0.2267963550623454, -0.7011994879734498, -0.06529367147748218, -0.7214703838030075, 0.5559724524523703, 0.5193223566678745, -0.558877075343895, -0.3391929942598935, 0.5943045551427001, -0.4642138321231284, 0.47160306764260945, 0.35014638117802105, 1.2302323290443928, 0.37418647791271614, -1.5126071917363966, 0.42482892916612036, -0.29425514319134416, 0.4151792321818056, -0.4838591530721763, 0.403923071427263, 0.13017275802188644, -2.589085113303095, 2.603637686405562, -0.32073716055446705, 1.1497202436132228, -0.48717691510216976, 0.4573944593293516, -1.50361982386721, -0.1667866499523288, 0.4105533666289332, -1.3859273102626335, -0.6621829470183833, -1.5122268259010905, 0.08807250762015248, -1.1760494486135635, -0.26292675574620605, 0.1074664713243493, 0.43074069063306275, -0.765251217609752, 1.0332601225061329, 1.4058212420296063, -0.5972793001963215, 0.7584358205784871, 0.16737420741916378, 0.6344621796871325, -0.8352767564519299, -0.9171502135255174, -0.09329435722985813, 0.061494827471286595, -1.1440770534039384, 1.303979550292278, -1.1788462301877562, -0.276955060920573, 0.26675220033560665, 0.7234555187934895, -1.194035972119993, -0.0657592839187157, -1.091624019308653, 0.5103106503664271, -0.004734997686899099, -0.22777412112484646, -1.6190508886754535, -0.18115224381300127, -2.608440028321393, -1.5683245922488456, 1.3096315178970444, -0.4143636074885007, -0.2286115605967474, 0.04434516812094227, -0.7939451934315132, 0.31706735434363065, -2.413078133845991, 0.9709725679172186, -0.1887786593199055, -1.9174666617356388, 0.4467721369614803, 0.9552783990755944, 0.3106283281003747, -0.9362163633934919, -0.7973137803062714, -1.2534842632103782, -0.008533762270906211, -0.6298451121695036, 1.7766024944170136, -0.8808979445861506, -0.7097509740148954, -0.2831234971365234, -0.7011401197746941, 0.22735283703853376, -0.3944426968721552, 1.2907787441787972, 1.3367414083013165, -0.24253743813348091, 0.6626476548851864, 0.013063165251961066, -0.3374729025942274, -0.19126070952108412, 0.11308559940865837, -0.29011610119402803, -0.8440891503632983, -0.6623067068873157, 0.2536163848475192, 1.4969691884255154, 0.8237269521925705, 0.7407904672025838, -0.6104463968321616, 0.011078526775537587, 2.7116617476680265, -1.053187585553275, 0.7365528396557893, 0.14805006808051405, 0.1807097214081298, 0.6104126878264767, 1.005970379569269, -0.835125239696545, 0.6201038469623135, -0.6412669168560385, 1.0054577940496139, -0.5299048599038627, -0.38562857433160264, 1.5528796413280042, -1.7332137684742766, -1.9058767771186946, -1.5604530552244043, 0.41115610836674177, -1.755784566220344, -0.5272272696765941, -0.3738796536912161, -1.1873054700946797, 0.20903421636552877, -0.3259570546156255, 0.32683976279510507, 1.2585867917684506, -0.7918766659188832, -1.2414152808479526, 0.9056469128590237, 1.0540950751665512, -2.1739390270516608, 0.21759791049956426, 0.1621152168021762, -0.2648391135057748, -0.5876367378316498, -0.5730621034843771, 1.5346205593236155, -0.8320897833176505, -1.0657224569770696, -1.2653367799081228, -0.5158632944767433, -1.2607750014947294, -0.6518881447544521, 0.5297125961057869, 0.8074381120184473, -0.44095047642289154, -1.0067548547520992, -0.22420465364134232, 0.8885314245115696, -1.1296568392833268, 0.42725983265296996, -0.6554056250315291, -0.25791630821418715, 0.5767295665964011, -1.2329771342012026, -0.1875990021480216, 0.7290236738703441, -1.4240195428012175, -0.5463759692998796, 0.7314786028951141, -0.22295059794855596, 0.04596933593853895, -0.19321142098373464, 0.040999716192066854, 2.1946621949775116, -0.20420701556684237, -0.7480983811173681, 0.21686241880249033, -0.09500894836544502, 0.4686832445323447]

x = x[:n_samples]

# convolve with the unknown filter
#d_clean = fftconvolve(x, w)[:n_samples]
""" for el in range(len(d_clean)):
    print(d_clean[el]) """

# add some noise to the reference signal
# d = d_clean + np.random.randn(n_samples) * 10 ** (-SNR / 20.0)
d = [0.2634214941632279, 0.07749338016486182, -0.3202410404952812, -0.8767253130862414, -0.1721570678529069, -0.40828645249048856, 0.08489706462151705, -0.1629506254266634, -1.4178554666012086, -0.7708321644321912, -0.6634358127892974, 0.3765219548219924, 0.45048419247095517, -1.2918776228093762, 0.02769035662430614, -1.4795444548738472, 1.3507079457001483, 2.0337535935067423, 0.03404024955846677, 0.26885761138410114, -1.4214369522211274, 0.6726567626556337, 1.0643268743661949, -0.2422767258095988, 0.06302378469846925, -0.2841096557979638, -0.511851056870244, -0.11466994382185902, -0.2836072904180285, -1.785806601892772, 0.5668166700552127, -0.8780916694856191, 0.8157905485648745, 0.011448803987062023, -0.534238928848264, 0.19748820542321732, -1.9025890808622579, -0.5711835339038165, -0.4691378376550552, -0.8874247934826391, 0.8166986747252486, -0.8900410821058781, -0.4278887959231361, 0.11117925311683594, -1.9284390610660478, -0.9963597600280659, -0.8219856865485211, -1.6150154234478815, 0.24042876210459727, -0.48588901121917555, -0.08264400404779645, -0.4418613770849653, 0.31266369729916677, -0.7870232472815822, -0.9923998000058756, -0.7335624452713773, 0.7370210210296431, 1.7316526465669675, 0.6724390579300032, 0.29907843191851385, -1.4415085893777857, -1.1330779640306625, 0.06881461674472271, 0.7956394714175055, 0.8450435530949378, 1.608716733766303, -0.37385231381862516, -1.4722158427306735, 0.389685442070183, -0.8696144271772734, 2.5973295572634165, 1.3092140255297857, 0.9423462960613571, 1.2488846650777412, -0.2483752839588865, 0.6293452249883242, -0.6705299053431704, 1.0818222200410585, 1.2041441687405947, 1.5769095650542515, 0.9715737652167382, -0.3344532458396023, -0.16946119821794497, 0.7483435687536556, -0.5300101799253976, -0.3729654294772441, -1.0531773287837383, -1.6012427738472925, 0.23467435186979374, -0.6044239681178376, 0.2865266225214379, -0.6647390137493683, 0.3386878496681996, 0.7000688552946516, -0.22761401911266102, 0.0499971639424371, -0.834755636132263, -0.3963781732511664, 1.030082924098935, 0.01550885953185413, 1.527093606061023, -1.1528620816522535, -0.6324018661327868, -0.14775017962529993, -0.2322135350135618, 1.67946101743218, -0.29695380562743906, 0.2806914082412693, -1.6689277082594665, -0.45057978935219395, 1.8399472782513242, -0.860426795390775, 1.615235546982206, -1.7708790403868704, -0.6519109620544447, -1.421654947348196, 0.6376348237981968, -0.649176900075089, -0.8751121317990165, -0.5050016178407966, -1.076422647591834, 0.23824568831034684, -0.5834034891447064, 0.16986510092114793, -0.2996284447216687, 0.2972677528983331, -0.29591215386644787, 0.4650463300784698, -0.3979005713928507, -0.3348885137619849, 1.2408850155758582, -0.5630967332990414, 0.2984602103376448, -0.775072460227791, -0.3052456009839914, -0.4679519736825733, 0.02958344828739773, 0.07121928097396002, -0.10786122043430653, -1.4765830125276855, 1.3139746250836286, -0.036054691854055465, 0.5787003162930761, -1.0718032294526154, -1.5304421956117447, -1.4401557759254304, 0.5877121822335168, 0.1788565529383178, 0.01335972234560276, -1.7614198974743116, -0.6257313860803686, -2.794619779636678, 0.0806815629475709, 0.3496516314710549, -1.6113113994800687, 0.7550326371135608, -1.9482969317192698, -1.045355540687944, 0.5724657137555422, -1.3596034521552034, 0.9237823375537646, -2.0729650533557034, -0.6350565852854085, 0.9041909030472636, 0.14651087093006707, 0.6027231686906083, -0.6708168462361572, -2.080058311388383, -1.0034795242439272, 0.1337988942502158, -0.14542177081132046, 1.449183835589011, -1.2215024016998957, 0.43422928755529505, -1.151262577960178, -0.7584498915046328, 0.6742674129153443, -0.01895089071076736, 1.405875849084966, 0.39561312774174057, 0.07283984760041728, -0.12454774413766348, -0.7218849448615872, 0.3752561919787574, 1.1326668638933455, 0.25901565354474143, -0.8183565129779067, -0.07952869764464271, -0.44876598132777984, 1.5892940197212766, 1.5377284557757163, -0.11124446282414546, 0.5157566403709732, -0.1687341017039421, 1.3835598793537929, 1.610190345504694, -0.6212941545663864, 1.6291018665307233, -1.3929843263014923, 0.5085105711111666, 1.5544578520916703, 0.01931207094545212, -0.38259584128956275, 0.3072112041365904, -1.7030445825791212, 0.7287428211274981, -1.0193076972659745, 0.752446328462486, -0.7376128543635994, -2.277867096424118, -1.0617450093091048, -1.9697677625493626, 0.5833460267543373, -0.360341420830432, -0.10033120218880576, -2.0165018212399084, -0.17155786525177041, 0.37899904013766317, -0.36487742242158044, 0.842920711502747, -0.33550766694598416, -1.1537838554860511, -0.5984472135510349, 0.8843306660212191, 0.038396336414292964, -0.6658740487740928, 0.15601224895349902, -1.8727427574879583, -0.22491505976253592, -0.9132287071418588, -0.28453955362238886, 1.0102894664464648, -0.9802613316241019, -0.2018414218520911, -2.0803580489484608, -0.5456392086976075, -0.8282224864693609, 0.5026474898968649, 0.24279661834266705, -0.38992830945997736, -0.2934360437554502, -1.2395023211921845, -0.24778198031238596, 0.5731980002934485, -1.1404020024930805, 0.430831800958238, -1.6256759322079088, 0.09472199648439227, 0.050503755111582185, -0.8887098329291224, 0.22542054329426722, -0.13623497286869468, -0.5546640925125019, 0.8319700750260554, 0.00426567634707091, -0.4635083646143742]

# create a bunch adaptive filters
# filter=pra.adaptive.RLS(length, lmbd=1.0, delta=2.0)
filter=pra.adaptive.NLMS(length, mu=0.5)
error=np.zeros(n_samples)

for i in range(n_samples):
    filter.update(x[i], d[i])
    error[i] = np.linalg.norm(filter.w - w)

print(error)
print(filter.w)
""" plt.plot(w)
for algo in adfilt.values():
    plt.plot(algo["filter"].w)
plt.title("Original and reconstructed filters")
plt.legend(["groundtruth"] + list(adfilt))

plt.figure()
for algo in adfilt.values():
    plt.semilogy(algo["error"])
plt.legend(adfilt)
plt.title("Convergence to unknown filter")
plt.show() """
