"""
Adaptive Filters Example
========================

In this example, we will run adaptive filters for system identification.
"""
from __future__ import division, print_function

import numpy as np 
from scipy.signal import fftconvolve
import math
import matplotlib.pyplot as plt
import pyroomacoustics as pra


# parameters
length = 15  # the unknown filter length
n_samples = 256  # the number of samples to run
SNR = 15  # signal to noise ratio

# the unknown filter (unit norm)
w = [-0.22581939022089953, 1.031314396460489, 0.05274826576188526, 0.03744777959351617, 0.33260071351053355, 0.8656307570671927, -0.3075684866798593, 0.2878244141616956, 0.3076111377914154, -0.6192207336716523, -1.0260512338725238, 1.2998288932645623, -1.5634695569269705, -0.0020682845002391657, 1.7819180231794163]

w /= np.linalg.norm(w)

w_norm = [-0.06809875387033472, 0.3110061770107275, 0.015906920852508707, 0.011292861622887267, 0.1003000411270941, 0.26104213553338435, -0.09275124980274879, 0.08679716971468718, 0.09276411179633275, -0.18673401027460254, -0.3094190023517809, 0.3919801917336893, -0.4714844391209291, -0.0006237179056140228, 0.537360395663569]

# create a known driving signal
x = [-0.22032413904166848, 1.4097296443985046, 0.43371524860044425, -0.8449914602900516, -0.26079782205800706, 0.10395446183776466, 0.9305763839858233, 1.1148296080634479, -0.05506629101846534, -1.1472809080771562, -0.5463902685029403, 0.12128004880588135, -0.32214334208503403, 0.18424163262097312, 0.7313279836380087, 1.51259906239951, 1.1070375251584152, 1.33500967471485, 0.7074253823259259, 2.3815625380443692, 0.051301787621883865, 0.48773599534433004, -0.11490292233129344, 1.1489186808203258, -0.2258011263130353, -0.640107771646006, 0.22358971650285242, -1.2695186738515283, 0.10054706987122274, 1.521153009971309, -0.08186000113839344, 0.8573641737072661, -1.263508898455436, -1.5463325376199524, -0.6315240039092712, 0.882009747578642, 0.20410161704648458, 0.5524500135140833, 0.6951233329764371, 0.7546638946120607, 1.0142373644716887, 0.018746175379838474, -0.42664151037666825, 1.0960614802764963, 0.05930093430283855, -0.6947275110538152, -1.2974689350259727, -0.17202830546869383, -0.2967719390129771, 0.6922646943770904, 0.7803303360985314, 0.1528582226793554, -1.6886951834936916, 1.2584953256857658, 0.2569311446502348, -0.34802328372050745, -0.14693140901841814, 0.12907266688870145, -0.19404683841239592, -0.9217011497917584, -1.4826148600053368, -0.4162777475226971, -2.0991478296211974, -1.1315164320725888, -0.7259605243370091, -0.30254474185463126, 1.3437890185592056, 0.5552221065093275, 0.19701335718800367, -0.2957494314196471, -0.6729070738639692, 1.067536589756381, 0.0025532269550161833, 1.7922446667843854, -1.7847069771974786, 0.5649872042194929, 0.09200300029015511, -0.10201580622027644, 1.9968146339534985, 1.4483448670894867, -0.28139546250619085, 1.5788583586823959, -0.17874333685371413, 1.1654467164862001, 0.18616785575346861, 1.5928733328552231, 0.27315511003156395, 0.4557335228360385, 0.013296034706249503, 1.3540098930306521, -0.6690784444763873, 0.4863841317782316, 0.14287469022409383, 0.7237942331919308, -1.3631459587227472, -0.1750471237677521, 1.1161125095463396, 1.1740831638923175, 0.18856087354932619, -1.1988944442671976, -0.6031517505381112, -0.276385756483637, -0.40309401788116284, -0.347874083058424, -1.3442081030794075, 0.46937446775116776, 0.7987082913018004, -0.17896934456141025, 1.0802340702313136, -0.004908266718980935, 1.2440298410885124, -0.1325387413694903, -0.03062504991144422, 0.660723152755905, -0.5208323989551396, 0.6398298412264541, 1.5710565858147871, 1.0691465190523948, -1.2241812479333152, -1.797715558120619, 0.4069908724991169, 1.1733657920876996, -0.3430862326015447, -0.5974956466921227, 0.9592589687765539, -0.9902331749256843, 0.30149309068847274, -0.10732751339629376, -0.20339048733440374, 0.9152545947504341, -1.1723016272003484, -0.10956970416356261, 0.4265878443926368, 0.14152969329706108, -0.5111507422496122, -0.15926278899983332, -1.6625377423998426, 3.091457417221858, 0.979295059228317, -0.7729929929006017, -0.029857253022814237, -0.460825009327685, 0.3309892909186296, 0.3526680174774618, 0.2502107262485458, -0.5643287760051745, -0.11465444100902324, 1.3139629566134525, -1.3814951771618258, -1.6061691747895641, -1.0680359074653498, -0.31542843978542134, -1.7148002567301874, 1.4012872364694355, -1.2800123835888746, 0.042105040906943454, -1.1851006392244765, -1.9064396091521147, -1.3708239375413813, 1.3440801426989615, -0.01627863087973301, 1.7649241430716907, 0.4936527482344426, 0.8421740708053587, -0.43184882451098067, 0.226006656692275, -0.059640180697089165, -0.6867272429091422, -1.229315744764115, 0.5999037397539037, 0.4879445527299798, 1.0301826312234794, 1.7531907017747579, 0.7744066367672685, -0.34955290404188694, 1.2340660493805304, -0.2004996101566467, -0.1478757692436602, 2.372946985741502, 0.283216432827871, 1.0507682585161369, 0.8945104367498568, 1.3723550434787142, -0.4658325154390351, -0.7455458489027814, 1.0237798604020476, 1.6841821871496567, 2.3919815758612684, -0.42175390275982017, -0.12556852150771858, -0.22789041903285578, -1.347553250503934, 1.5172248773796444, 0.1736370182171888, 0.8256618185938469, 0.4833604213820666, -0.0948285196392691, 0.9651230368809506, -0.4740663275727422, 0.9302559310287549, -1.122064652280185, 0.6760441097236843, -0.577575829780173, -0.5530192016839814, 0.1660568936766007, -0.7455941307354899, -0.23730618342975096, 1.451899824911758, 0.4922994331817322, 0.5734136388573566, 1.3129612033701201, -1.2569791744949805, 0.4841556633547175, 2.1751221020616174, 0.8393392313762004, 0.17715787593614535, -0.8244008367638085, -0.011191892099289244, 0.29535821396058165, -0.8485095980789727, -0.06147974440189607, 0.4389893961489945, 0.4997203536993574, -2.36453999229915, -0.46887894555631215, 0.7357765883520645, -0.5881900720375762, -2.3770405134525627, -0.22440070841055482, -0.5449165254947529, 1.2945561502690006, -2.209937558420291, -1.4521918421653468, 0.3443492742985837, -1.8635089072306943, 1.0074103259881841, -1.0643288525165524, 0.4830005166815838, -1.1952411503185827, -0.2695446978454223, -0.06598592299806774, 1.0412467120591193, 1.17272676625137, 0.27144234551424473, 2.042397170164063, -0.4121173428073413, -0.4318182421851708, 0.20589471333964418, -0.3653828989526935, 1.4914059262686454, -0.16017384003086624, 0.9415989898109989, 0.1396882618462, 0.394530053295186, 1.7515879363476006, -0.977015594694591]

# convolve with the unknown filter
#d_clean = fftconvolve(x, w)[:n_samples]
""" for el in range(len(d_clean)):
    print(d_clean[el]) """

# add some noise to the reference signal
# d = d_clean + np.random.randn(n_samples) * 10 ** (-SNR / 20.0)
d = [-0.09817164408109831, -0.21715351165112656, 0.22030886734931276, -0.1741877992640064, -0.07360456451979855, -0.027762953004555634, 0.6013030903929577, 0.12500073102259124, 0.2579820237428577, 0.2055302064312463, -0.26890006760516877, -0.6294580741766408, 0.675548806877448, -0.3063185576268134, -0.7441571483198615, 0.7325771039703659, 0.11196904124274087, -0.7486336551436332, 0.4475184570292352, 0.17767461428918102, 1.348035696605867, 1.6558022707346631, 1.1643414395229037, -0.3618828129109777, 0.7234975747463238, -0.3951476589024989, -0.17800524231009113, -0.32395829945025806, -0.7244985771449108, -0.563622702096337, 1.4872151831663736, -0.5501249542387351, 0.5438342413852337, 0.7517203774234233, 0.2264281911785942, -0.6467722683927211, 0.41330504779616306, 1.1798549290434317, -1.1886131801386297, -0.026579560702716158, 0.7210774134626291, -1.1311164807345424, 1.6429314165242177, 0.6185793601843065, 0.39428365397456855, 0.9381031127852432, -0.4497977937211938, -1.6191887455375271, -0.2945322385099666, -0.6285089844606341, -0.7746367447143523, 0.38996142408942286, 0.08344798005185793, -0.6499450982415323, 1.8342349993139535, 0.13641354125441182, -0.14067752347406562, 0.18235085001616103, 1.035446641549425, -0.7912479530391737, -0.6895532703352436, -0.12590439782576576, -0.14210487496387925, -1.3322783830400762, 0.8297465902797749, -0.7653225635480495, -1.8806859922225925, 0.254659144082612, 0.360614279311295, -0.10000543340620267, -0.08768314476036727, 0.623841088783136, 1.3018874433718777, -0.3901317783202328, 0.41115446384552107, -0.5353565252852155, -1.0014420373651485, -0.39101040973970036, -0.592871385568605, -0.10351979048995685, 1.5534447639056996, -0.23653290032710217, 1.1992815167635977, -0.2504962499336538, 1.3370554973083093, -0.977790742807307, 2.336685833306585, 0.6221227397361887, -1.3017578418194162, 1.0132066736790903, 0.5617442507295647, -1.5067297707813414, 1.7463199830577258, -0.225384035701155, 0.7512760212065261, -0.5461142618170952, 0.318260125281917, 0.22639000699500347, 0.15024306560801673, 0.20869111430612863, 0.4590509599389942, -0.5136894160420371, -0.09249537589505269, 0.5480825220135891, -0.09021538913445601, -1.0994558781450214, -0.22402663357982092, 0.7257238085864488, -0.6774039385603656, -0.024004550927804714, 0.44992448902629567, 1.4861537294309328, 0.5973896816241944, 0.07143631353519003, 0.44865601469350547, -0.37401331243653624, 0.4236067248280358, 0.09938244155366699, -0.7431354487870266, 0.09672522236322824, -0.3810070065334139, 1.0114703093608461, 0.3735435519463375, -0.42618563878409943, 0.7000656695944947, -0.4805283721539303, -0.266313833424788, 0.03930719001471847, 0.13456306981838068, -0.09366309103566992, 0.7138721703131561, 1.256782172286621, -0.38539706946299984, -1.375942397315975, 0.4670013083559681, 0.6547376753802703, -0.6481894620552785, -0.39328576847352575, 1.0399673238832579, -0.5665186044657065, 0.1401554702545813, -1.257855506211734, 1.1901928909603186, 0.2962507454135369, -0.45758247554894105, 0.9302085760260954, 0.025660454076954123, -1.5595845629920793, 1.7100420849995561, -1.529448468451061, -2.3591325303034556, 2.16199668929988, 0.20857653137704005, -1.3833500323239005, 0.10687551540855801, -0.89499508006628, -0.46257145540966593, -0.2695214239915351, 0.9192930250437328, -1.773314438950145, 0.9505302491757819, 0.8818068667595085, -0.4966586765576453, -1.7263747795933175, 1.6994761000655796, -1.5433193657170967, 1.0647011458542373, 1.2862347383577795, -0.16677951704264055, -0.41001269142151586, 0.5934477346874736, -2.3759877981453554, -0.4160811133009277, 0.08478986182849096, 0.8537400122705605, -0.16615621413301138, 1.399632927669625, 1.230818136622137, -0.12677692108787772, 0.6948024285221538, 0.8136070231424559, -0.8721882488518542, -0.7471579982300058, 1.1386348531018522, -0.5859661817946061, -0.16495069831545764, 2.656429363308726, -0.14749205465960236, -0.5739824721408877, 1.5324753116665972, -1.189687672417971, 0.05389146413792212, 0.6814259792270525, 0.9602818239744544, 0.4214974065220035, -0.017761407376192962, 0.6008746852270888, -0.27748271654125395, 0.13904874004000428, -0.6120656965957466, 2.292462202073525, 1.3051472587692385, -0.5904431629679326, 0.7646877903561162, -0.9489097975191175, -0.7188963501353035, 0.29625717100667953, -0.6183797880869351, 1.172973095293779, -0.46893205899110735, 0.4274934068829286, 0.6673879201832729, 0.7308204084931749, -0.17966456464912448, 0.1734009979825396, 1.564638996934405, -0.9448013629929305, -0.13428100099186732, 1.2086955784918285, -0.9302230469631629, -0.6838414944583797, 1.0809843291212782, -1.069077920090557, 0.16610435356298586, 0.21889061000616875, -1.5008784294318511, 0.5901749005971891, 0.18556091957471021, -0.6466403838087265, 1.0064236267149087, -1.5282979077351035, 0.07645166632125439, -0.723073813449359, -0.39015348435645913, -1.3800962943330104, 0.42391863800107527, 0.8116337914307451, -1.448062757949155, -0.638013459287472, 0.45087888630197365, -0.3652328077188498, -0.06470537457214218, -0.8118027648504743, -0.09158392705863189, 2.2710042872593657, -1.3541790616649978, 0.9093865189205667, -0.29756058273844826, 0.4731106879243024, 0.47983261482158496, 0.08519076804315062, 0.07266494147965591, -0.38369549276042814, -0.5891686720064325, -0.8148162198038889, 2.0004380275716835]

# create a bunch adaptive filters
# filter=pra.adaptive.RLS(length, lmbd=1.0, delta=2.0)
filter=pra.adaptive.NLMS(length, mu=0.5)
error=np.zeros(n_samples)

for i in range(n_samples):
    filter.update(x[i], d[i])
    error[i] = np.linalg.norm(filter.w - w)

print(error)
print(filter.w)
""" plt.plot(w)
for algo in adfilt.values():
    plt.plot(algo["filter"].w)
plt.title("Original and reconstructed filters")
plt.legend(["groundtruth"] + list(adfilt))

plt.figure()
for algo in adfilt.values():
    plt.semilogy(algo["error"])
plt.legend(adfilt)
plt.title("Convergence to unknown filter")
plt.show() """
